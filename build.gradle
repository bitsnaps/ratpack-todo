
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'io.ratpack:ratpack-gradle:1.3.3'
        classpath 'com.h2database:h2:1.4.197'
        classpath 'org.jooq:jooq-codegen:3.10.1'
    }
}

plugins {
    id 'io.ratpack.ratpack-groovy' version '1.3.3'
    id 'idea'
}

apply plugin: "io.ratpack.ratpack-groovy"
apply plugin: "idea"


sourceCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    compile ratpack.dependency('hikari') // or 'io.ratpack:ratpack-hikari:1.5.4'
//    compile ratpack.dependency('handlebars') // handlebars.js template engine
//    compile ratpack.dependency('thymeleaf') // HTML template engine
    compile 'com.h2database:h2:1.4.197'
    compile 'org.jooq:jooq-codegen:3.10.1'
    compile 'org.slf4j:slf4j-simple:1.7.25'
}

import org.jooq.util.jaxb.* // Target moved to org.jooq.meta.jaxb
import org.jooq.util.*

task jooqCodegen {
    doLast {
        String init = "$projectDir/src/main/resources/init.sql".replaceAll('\\\\', '/')
        Configuration configuration = new Configuration()
                .withJdbc(new Jdbc()
                    .withDriver('org.h2.Driver')
                    .withUrl("jdbc:h2:mem:todo;INIT=RUNSCRIPT FROM '$init'")
                )
                .withGenerator(new Generator()
                    .withDatabase(new Database()
                        .withName('org.jooq.util.h2.H2Database')
                        .withIncludes('.*')
                        .withExcludes('')
                        .withInputSchema('PUBLIC')
                    )
                    .withTarget(new Target()
                        .withPackageName('jooq')
                        .withDirectory("$projectDir/src/main/groovy")
                    )
                )
        GenerationTool.generate(configuration)

    }
}